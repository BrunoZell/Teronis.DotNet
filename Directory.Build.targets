<?xml version="1.0" encoding="utf-8" ?>
<Project InitialTargets="InstallGitVersionTask" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Import Condition="'$(IsRootMarkerFileImported)' != 'true'" Project="$([MSBuild]::GetPathOfFileAbove(.msbuild))" />
  <Import Condition="'$(IsTeronisDotNetCorePropsFileImported)' != 'true'" Project="$(RootCorePropsPath)" />
  <Import Project="$(TeronisMSBuildPackagingProjectBuildInPackageTargetsFile)" />

  <PropertyGroup>
    <TeronisMSBuildPackagingGenerateFilesystemPackageInProjectTargetsFile>$(RootDirectory)src\MSBuild\Core\Core\src\bin\PackagePublish\build\Teronis.MSBuild.Packaging.GenerateFilesystemPackageInProject.targets</TeronisMSBuildPackagingGenerateFilesystemPackageInProjectTargetsFile>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="@(ProjectReference)">
      <!-- Prevent Reference.*-projects from being tracked in *.nuspec files. -->
      <!-- <PrivateAssets Condition="$([System.String]::Copy('%(Filename)').Contains('Reference.'))">all</PrivateAssets> -->
      <!-- <ReferenceOutputAssembly Condition="$([System.String]::Copy('%(Filename)').Contains('Reference.'))">false</ReferenceOutputAssembly> -->
    </ProjectReference>
  </ItemGroup>
  
  <ItemGroup>
    <ProjectReference Include="@(ProjectReference)">
      <!-- <AdditionalProperties Condition="'%(Filename)' == 'Teronis.NetStandard.Core'">%(AdditionalProperties);TargetFramework=netstandard2.0</AdditionalProperties> -->
      <!-- <AdditionalProperties Condition="'%(Filename)' == 'Teronis.NetStandard.Core'">%(AdditionalProperties);TargetFramework=$(TargetFramework)</AdditionalProperties> -->
    </ProjectReference>
  </ItemGroup>

  <Target Name="InstallGitVersionTask" >

    <PropertyGroup>
      <HasGitVersionTask Condition="'%(PackageReference.Identity)' == 'GitVersionTask'">true</HasGitVersionTask>
    </PropertyGroup>

    <ItemGroup Condition="'$(DisableGitVersionTaskAutoInstall)' != 'true' And '$(HasGitVersionTask)' != 'true'">
      <PackageReference Include="GitVersionTask" Version="$(GitVersionTaskVersion)">
        <PrivateAssets>all</PrivateAssets>
        <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      </PackageReference>
    </ItemGroup>

  </Target>

</Project>
