# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
      - master
      - develop
      - releases/*
      - features/*
      - pull-requests/*
      - hotfixes/*
      - support/*
  tags:
    exclude:
      - '*'

variables:
  - template: shared-variables.yml
  
jobs:
  - job: PreventPipelineAbort
    displayName: Prevent Pipeline Abort
    pool:
      vmImage: ${{ variables.vmImage }}
    steps:
      - task: PowerShell@2
        condition: and(succeeded(), not(contains(variables['Build.SourceVersionMessage'], '[push nuget.org]')))
        inputs:
          filePath: '$(Build.SourcesDirectory)\build\vstsabort\abort.ps1'
        env:
          LEXTUDIO_VSTSABORT: true
          SYSTEM_PAT: $(PIPELINE_ABORT_PAT)
          
      - powershell: Start-Sleep -Seconds 5
      - powershell: Write-Host "It does not work"
          

  # - template: publish-build-artifacts-job.yml
  #   parameters:
  #     jobName: ${{ variables.publishBuildArtifactsJobName }}
  #     vmImage: ${{ variables.vmImage }}
  #     publishBuildArtifactsArtifactName: ${{ variables.publishBuildArtifactsArtifactName }}

  # - job: PushNugetArtifacts
  #   dependsOn: ${{ variables.publishBuildArtifactsJobName }}
  #   variables:
  #     - name: nugetArguments
  #       value: '-ConfigFile $(Build.SourcesDirectory)\nuget.config -Source "nuget.org" -SkipDuplicate -Verbosity detailed'
  #   displayName: Push NuGet Artifacts (nuget.org)
  #   pool:
  #     vmImage: ${{ variables.vmImage }}
  #   steps:
  #     - task: DownloadBuildArtifacts@0
  #       displayName: Download NuGet Packages
  #       inputs:
  #         buildType: current
  #         artifactName: '${{ variables.publishBuildArtifactsArtifactName }}'
  #         downloadPath: '$(Build.StagingDirectory)'
          
  #     - task: NuGetToolInstaller@1

  #     - script: nuget push $(Build.StagingDirectory)\${{ variables.publishBuildArtifactsArtifactName }}\**\*.nupkg $(nugetArguments) -ApiKey $(NUGET_ORG_APIKEY) -NoSymbols
  #       displayName: Push NuGet Packages

  #     - task: PowerShell@2
  #       inputs:
  #         filePath: '$(Build.SourcesDirectory)\build\push-nuget-packages.ps1'
  #         arguments:
  #           $(Build.StagingDirectory)\${{ variables.publishBuildArtifactsArtifactName }}\**\*.snupkg
  #           -Arguments '$(nugetArguments) -ApiKey $Env:NUGET_ORG_APIKEY'
  #           -ContinueOnError 1
  #       env:
  #         NUGET_ORG_APIKEY: $(NUGET_ORG_APIKEY)
  #       displayName: Push NuGet Symbol Packages